
Процедура ВыгрузкаВерсий() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("АктуальныйСрокЗахвата", ТекущаяДата() - (60*60*Константы.МаксимальныйСрокЗахвата.Получить()));
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Хранилища.Ссылка КАК Хранилище,
	|	Хранилища.КоличествоВерсийВыгружаемыхВРегламентномЗадании КАК КоличествоВерсийВыгружаемыхВРегламентномЗадании,
	|	Хранилища.ВерсияДанных
	|ИЗ
	|	Справочник.Хранилища КАК Хранилища
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ РАЗЛИЧНЫЕ
	|			ВерсииКонфигурацийХранилища.Владелец КАК Хранилище
	|		ИЗ
	|			Справочник.ВерсииКонфигурацийХранилища КАК ВерсииКонфигурацийХранилища
	|		ГДЕ
	|			ВерсииКонфигурацийХранилища.ПометкаУдаления = ЛОЖЬ
	|			И ВерсииКонфигурацийХранилища.ВыгруженаВЛокальныйРепозиторий = ЛОЖЬ) КАК ВложенныйЗапрос
	|		ПО Хранилища.Ссылка = ВложенныйЗапрос.Хранилище
	|ГДЕ
	|	НЕ Хранилища.ПометкаУдаления
	|	И Хранилища.ИспользоватьВРегламентномЗадании
	|	И (Хранилища.ВРаботе = ЛОЖЬ
	|			ИЛИ Хранилища.ДатаЗахвата < &АктуальныйСрокЗахвата)";  
	
	ТаблицаДанных = Запрос.Выполнить().Выгрузить();
	
	Для Каждого СтрокаТаблицы из ТаблицаДанных Цикл 
		
		Если Не ВерсииДанныхХранилищаСовпадают(СтрокаТаблицы, "Выгрузка версий")Тогда 
			Продолжить;
		КонецЕсли;
		
		Попытка
			Справочники.Хранилища.УставновитьОтметкуЗанятости(СтрокаТаблицы.Хранилище, Истина);
			
			Справочники.Хранилища.ВыгрузитьВерсииВЛокальныйРепозиторий(СтрокаТаблицы.Хранилище, СтрокаТаблицы.КоличествоВерсийВыгружаемыхВРегламентномЗадании);
			
			Справочники.Хранилища.ВыгрузитьВерсииВУдаленныйРепозиторий(СтрокаТаблицы.Хранилище);
			
			Справочники.Хранилища.УставновитьОтметкуЗанятости(СтрокаТаблицы.Хранилище, Ложь);
		Исключение
			Справочники.Хранилища.УставновитьОтметкуЗанятости(СтрокаТаблицы.Хранилище, Ложь);
			ВызватьИсключение;
		КонецПопытки;
		
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗагрузкаНовыхВерсий() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("АктуальныйСрокЗахвата", ТекущаяДата() - (60*60*Константы.МаксимальныйСрокЗахвата.Получить()));
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Хранилища.Ссылка КАК Хранилище,
	|	Хранилища.ВерсияДанных
	|ИЗ
	|	Справочник.Хранилища КАК Хранилища
	|ГДЕ
	|	НЕ Хранилища.ПометкаУдаления
	|	И Хранилища.ИспользоватьВРегламентномЗадании
	|	И (Хранилища.ВРаботе = ЛОЖЬ
	|			ИЛИ Хранилища.ДатаЗахвата < &АктуальныйСрокЗахвата)";  	
	ТаблицаДанных = Запрос.Выполнить().Выгрузить();
	
	Для Каждого СтрокаТаблицы из ТаблицаДанных Цикл 
		
		Если Не ВерсииДанныхХранилищаСовпадают(СтрокаТаблицы, "ЗагрузкаНовыхВерсий")Тогда 
			Продолжить;
		КонецЕсли;
		
		Попытка
			Справочники.Хранилища.УставновитьОтметкуЗанятости(СтрокаТаблицы.Хранилище, Истина);
			
			Справочники.Хранилища.ЗагрузитьНовыеВерсии(СтрокаТаблицы.Хранилище);
			
			Справочники.Хранилища.УставновитьОтметкуЗанятости(СтрокаТаблицы.Хранилище, Ложь);
		Исключение
			Справочники.Хранилища.УставновитьОтметкуЗанятости(СтрокаТаблицы.Хранилище, Ложь);
			ВызватьИсключение;
		КонецПопытки;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверкаАПК() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("АктуальныйСрокЗахвата", ТекущаяДата() - (60*60*Константы.МаксимальныйСрокЗахвата.Получить()));
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПроверкаАПК.Ссылка КАК Ссылка,
	|	ПроверкаАПК.ВерсияДанных,
	|	ПроверкаАПК.Владелец КАК Хранилище
	|ИЗ
	|	Справочник.ПроверкаАПК КАК ПроверкаАПК
	|ГДЕ
	|	НЕ ПроверкаАПК.ПометкаУдаления
	|	И ПроверкаАПК.ИспользоватьВРегламентномЗадании
	|	И НЕ ПроверкаАПК.Владелец.ПометкаУдаления
	|	И (ПроверкаАПК.Владелец.ВРаботе = ЛОЖЬ
	|			ИЛИ ПроверкаАПК.Владелец.ДатаЗахвата < &АктуальныйСрокЗахвата)";  
	
	ТаблицаДанных = Запрос.Выполнить().Выгрузить();
	
	Для Каждого СтрокаТаблицы из ТаблицаДанных Цикл 
		
		Если Не ВерсииДанныхХранилищаСовпадают(СтрокаТаблицы, "ПроверкаАПК")Тогда 
			Продолжить;
		КонецЕсли;
		
		Попытка
			Справочники.Хранилища.УставновитьОтметкуЗанятости(СтрокаТаблицы.Хранилище, Истина);	
			
			Справочники.ПроверкаАПК.ВыполнитьПроверку(СтрокаТаблицы.Ссылка);
			
			Справочники.Хранилища.УставновитьОтметкуЗанятости(СтрокаТаблицы.Хранилище, Ложь);
		Исключение
			ОтменитьТранзакцию();
			Справочники.Хранилища.УставновитьОтметкуЗанятости(СтрокаТаблицы.Хранилище, Ложь);
			ВызватьИсключение;
		КонецПопытки;
		
	КонецЦикла;
	
КонецПроцедуры

//Процедура СобратьМетрики() Экспорт 
//	
//	Запрос = Новый Запрос;
//	Запрос.УстановитьПараметр("АктуальныйСрокЗахвата", ТекущаяДата() - (60*60*Константы.МаксимальныйСрокЗахвата.Получить()));
//	Запрос.Текст = 
//	"ВЫБРАТЬ
//	|	ДанныеМетрик.Хранилище КАК Хранилище,
//	|	МАКСИМУМ(ДанныеМетрик.Версия.Код) КАК Код
//	|ПОМЕСТИТЬ ПовледниеВерсииСМетрикой
//	|ИЗ
//	|	РегистрСведений.ДанныеМетрик КАК ДанныеМетрик
//	|
//	|СГРУППИРОВАТЬ ПО
//	|	ДанныеМетрик.Хранилище
//	|;
//	|
//	|////////////////////////////////////////////////////////////////////////////////
//	|ВЫБРАТЬ РАЗЛИЧНЫЕ
//	|	ВерсииКонфигурацийХранилища.Владелец КАК Хранилище,
//	|	ВерсииКонфигурацийХранилища.Владелец.ВерсияДанных КАК ВладелецВерсияДанных,
//	|	МАКСИМУМ(ВерсииКонфигурацийХранилища.Ссылка) КАК Ссылка
//	|ИЗ
//	|	Справочник.ВерсииКонфигурацийХранилища КАК ВерсииКонфигурацийХранилища
//	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Хранилища.ИспользуемыеМетрики КАК ХранилищаИспользуемыеМетрики
//	|		ПО ВерсииКонфигурацийХранилища.Владелец = ХранилищаИспользуемыеМетрики.Ссылка
//	|		ЛЕВОЕ СОЕДИНЕНИЕ ПовледниеВерсииСМетрикой КАК ПовледниеВерсииСМетрикой
//	|		ПО ВерсииКонфигурацийХранилища.Владелец > ПовледниеВерсииСМетрикой.Хранилище
//	|ГДЕ
//	|	ВерсииКонфигурацийХранилища.ВыгруженаВЛокальныйРепозиторий = ИСТИНА
//	|	И (ВерсииКонфигурацийХранилища.Владелец.ВРаботе = ЛОЖЬ
//	|			ИЛИ ВерсииКонфигурацийХранилища.Владелец.ДатаЗахвата < &АктуальныйСрокЗахвата)
//	|	И ВерсииКонфигурацийХранилища.Код > ЕСТЬNULL(ПовледниеВерсииСМетрикой.Код, 0)
//	|
//	|СГРУППИРОВАТЬ ПО
//	|	ВерсииКонфигурацийХранилища.Владелец,
//	|	ВерсииКонфигурацийХранилища.Владелец.ВерсияДанных";
//	
//	ТаблицаДанных = Запрос.Выполнить().Выгрузить();
//	
//	Для Каждого СтрокаТаблицы из ТаблицаДанных Цикл 
//		
//		Если Не ВерсииДанныхХранилищаСовпадают(СтрокаТаблицы, "Сбор метрик")Тогда 
//			Продолжить;
//		КонецЕсли;
//		
//		Попытка
//			
//			Справочники.Хранилища.УставновитьОтметкуЗанятости(СтрокаТаблицы.Хранилище, Истина);
//			

//			Справочники.Хранилища.УставновитьОтметкуЗанятости(СтрокаТаблицы.Хранилище, Ложь);
//			
//		Исключение
//			Справочники.Хранилища.УставновитьОтметкуЗанятости(СтрокаТаблицы.Хранилище, Ложь);
//			ВызватьИсключение;
//		КонецПопытки;
//		
//	КонецЦикла;
//	
//КонецПроцедуры	

Функция ВерсииДанныхХранилищаСовпадают(СтрокаТаблицы, Источник = "")
	
	Если СтрокаТаблицы.Хранилище.ВерсияДанных = СтрокаТаблицы.ВерсияДанных Тогда 
		Возврат Истина;
	КонецЕсли;	

	ЗаписьЖурналаРегистрации("Регламентная работа с хранилищем" + ?(ЗначениеЗаполнено(Источник), "."+Источник, ""),
	УровеньЖурналаРегистрации.Предупреждение, ,СтрокаТаблицы.Хранилище, "Версия хранилища отлачается от версии из выборки.");	
	
	Возврат Ложь;
	
КонецФункции	



